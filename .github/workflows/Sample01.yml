name: Github Actions Demo
on: 
  workflow_dispatch:
  push:
  
jobs:
  Example-Actions-Job:
    name: Exploring Github Actions
    runs-on: ubuntu-latest
    steps:
    - run: echo "Payload field is ${{ github.event.client_payload.mydata }}"
    # Display the event that triggered the workflow
    - run: echo "The job was triggerd by a ${{ github.event_name }} event."
    
    # Runner information
    - run: echo "This job is running on ${{ runner.os }} server hosted by GitHub."
    
    - name: Detect Node version
      run: | 
        node --version
     
    - name: Detect Npm version
      run: | 
        npm --version
    - name: Download Node 20 Version
      run: |
        curl -o node-v20.tar.xz https://nodejs.org/dist/v20.9.0/node-v20.9.0-linux-x64.tar.xz
    - name: Extract Node 
      run: |
        mkdir sw 
        tar -C sw -xf node-v20.tar.xz
        ls -ltr ${{ github.workspace }}
        cd sw/node-v20.9.0-linux-x64/bin
        ls -ltr
    - name: Detect Node20 version
      run: | 
        export PATH=/home/runner/work/github-actions23/github-actions23/sw/node-v20.9.0-linux-x64/bin:$PATH
        npm --version
        node --version
    - name: Checkout
      uses: actions/checkout@v4

    - name: Detect Package Name
      id: read-json
      run: |
        echo "packageConfig<<EOF" >> $GITHUB_OUTPUT
        cat ./package.json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    - name: Print OUtput
      env: 
        PACKAGE_NAME: ${{ fromJson(steps.read-json.outputs.packageConfig).name }}
        PACKAGE_VERSION: ${{ fromJson(steps.read-json.outputs.packageConfig).version }}
      run: |
        echo "${{ fromJson(steps.read-json.outputs.packageConfig).version }}"
        echo "${{ fromJson(steps.read-json.outputs.packageConfig).name }}"
    - name: Build
      env: 
        FILETOPUB: ${{ env.PACKAGE_NAME }}. ${{ env.PACKAGE_VERSION }} .tgz
      run: | 
        echo "Package to Publish is ${{ fromJson(steps.read-json.outputs.packageConfig).name }}.${{ fromJson(steps.read-json.outputs.packageConfig).version }}.tgz"
        export PATH=/home/runner/work/github-actions23/github-actions23/sw/node-v20.9.0-linux-x64/bin:$PATH
        #curl -uraju4cloud:AP2PoNKU4AAE8jMYqWRq8URGHwr "https://studentwf.jfrog.io/artifactory/api/npm/npm-yoglib-local/auth/jfrog" > .npmrc
        curl -uraju4cloud1:AP7L5WkZYceUnSoVYZuGq6rRyi4 "https://studentwf.jfrog.io/artifactory/api/npm/student-home-npm/auth/jfrog" > .npmrc
        mkdir npm
        mv -f .npmrc npm/
        npm install --userconfig npm/.npmrc
        npm run build
        npm pack
        rm -f npm/.npmrc 
    

    - name: Fetch Artifacts Name
      id: fan
      run : |
        mkdir artifacts
        
        find . -name *.tgz -maxdepth 1 | awk -F/ '{ print $NF }'
        artifactTgzFiles=$(find . -name *.tgz -maxdepth 1 | awk -F/ '{ print $NF }')
        echo $artifactTgzFiles
        cp $artifactTgzFiles ./artifacts/ 
        echo "artifactTgzFileName=$artifactTgzFiles" >> $GITHUB_OUTPUT

        find . -name *.yml -maxdepth 1 | awk -F/ '{ print $NF }'
        artifactYmlFiles=$(find . -name *.yml -maxdepth 1 | awk -F/ '{ print $NF }')
        echo $artifactYmlFiles
        cp $artifactYmlFiles ./artifacts/
        
        find . -name '*.json' -maxdepth 1 | awk -F/ '{ print $NF }'
        artifactJsonFiles=$(find . -name '*.json' -maxdepth 1 | awk -F/ '{ print $NF }')
        echo $artifactJsonFiles
        cp $artifactJsonFiles ./artifacts/
        
        dir ./artifacts

    - name: Zip Artifacts
      run: |
        tar -czvf artifacts.tar.gz ./artifacts 
    
    - name: Publish
      run: | 
        export PATH=/home/runner/work/github-actions23/github-actions23/sw/node-v20.9.0-linux-x64/bin:$PATH
        #curl -uraju4cloud:AP2PoNKU4AAE8jMYqWRq8URGHwr "https://selfeducation.jfrog.io/artifactory/api/npm/npm-yoglib-local/auth/jfrog" > .npmrc
        #mv -f .npmrc npm/
        #cat npm/.npmrc
        # npm publish --registry https://selfeducation.jfrog.io/artifactory/api/npm/npm-yoglib-local/ --userconfig npm/.npmrc
        curl -v --user raju4cloud1:AP7L5WkZYceUnSoVYZuGq6rRyi4 --data-binary artifacts.tar.gz -X PUT "https://studentwf.jfrog.io/artifactory/student-home-npm/${{ fromJson(steps.read-json.outputs.packageConfig).version }}/artifacts.tar.gz"
   
    
    
    - name: Publish NPM Package
      run: | 
        export PATH=/home/runner/work/github-actions23/github-actions23/sw/node-v20.9.0-linux-x64/bin:$PATH
        #curl -uraju4cloud:AP2PoNKU4AAE8jMYqWRq8URGHwr "https://selfeducation.jfrog.io/artifactory/api/npm/npm-yoglib-local/auth/jfrog" > .npmrc
        #mv -f .npmrc npm/
        #cat npm/.npmrc
        # npm publish --registry https://selfeducation.jfrog.io/artifactory/api/npm/npm-yoglib-local/ --userconfig npm/.npmrc

   
