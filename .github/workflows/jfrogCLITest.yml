name: JFrog CLI POC
on: 
  workflow_dispatch:
  push:
  
  
jobs:
  Example-Actions-Job:
    env:
      ARTI_REPO: 'student-home-nuget'
    name: Exploring Github Actions
    runs-on: ubuntu-latest
    steps:
    - name: Setup Dotnet
      uses: actions/setup-dotnet@v3
      with: 
        dotnet-version: '7.0'

    - name: Download JFrog CLI
      run: |
        wget -O jfrog https://releases.jfrog.io/artifactory/jfrog-cli/v2-jf/2.52.7/jfrog-cli-linux-386/jf
        ls -ltr
        chmod +x jf
    
    - name: Verify JFrog CLI installation
      run: jf --version
      
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build Dotnet Component
      id: dotnet-build
      run : |
        dotnet msbuild 'dotnetProj/build.proj'
        
    - name: Zip Dotnet Artifacts
      id: zip-dotnet-artifacts
      run: |
        zip -r dotnet-artifacts.zip dotnetProj/WebApp/bin/Debug/net7.0

    - name: Resolve Repository Name
      run: |
        ARTI_NPM_REPO=$( echo $ARTI_REPO | sed 's/nuget/npm/')
        echo "ARTI_NPM_REPO=$ARTI_NPM_REPO" >> $GITHUB_ENV

        ARTI_GENERIC_REPO=$( echo $ARTI_REPO | sed 's/nuget/generic/')
        echo "ARTI_GENERIC_REPO=$ARTI_GENERIC_REPO" >> $GITHUB_ENV
        
    - name: Fetch Artifacts Name
      id: fetch-artifacts
      run : |
        
        file_extensions=("zip" "tgz" "nupkg" "csproj" "abc" "json")
        
        for ext in "${file_extensions[@]}"; do
          files=$(find . -maxdepth 5 -type f -name "*.$ext")
          if [ -n "$files" ]; then
            case $ext in
              "zip")
                destination_folder="artifactsZip"
                archieveName="artifactsZip.zip"
                echo "zipTypeArtifact-exists=true" >> $GITHUB_OUTPUT
                ;;
              "tgz")
                destination_folder="artifactsTgz"
                archieveName="artifactsTgz.zip"
                echo "tgzTypeArtifact-exists=true" >> $GITHUB_OUTPUT
                ;;
              "nupkg")
                destination_folder="artifactsNupkg"
                archieveName="artifactsNupkg.nupkg"
                echo "nugetTypeArtifact-exists=true" >> $GITHUB_OUTPUT
               ;;
              "csproj")
                destination_folder="artifactsCsproj"
                archieveName="artifactsCsproj.zip"
                echo "csprojTypeArtifact-exists=true" >> $GITHUB_OUTPUT
               ;;
              "abc")
                destination_folder="artifactsAbc"
                archieveName="artifactsAbc.zip"
                echo "abcTypeArtifact-exists=true" >> $GITHUB_OUTPUT
               ;;
              "json")
                destination_folder="artifactsJson"
                archieveName="artifactsJson.zip"
                echo "jsonTypeArtifact-exists=true" >> $GITHUB_OUTPUT
               ;;
            esac
            mkdir -p "$destination_folder"
            for file in $files; do
              cp "$file" "$destination_folder"
            done
            cd $destination_folder && zip -r "../$archieveName" . && cd ..
          fi
        done
           
    - name: Publish Nuget
      if: steps.fetch-artifacts.outputs.nugetTypeArtifact-exists == 'true'
      run: | 
        curl -v --user raju4cloud:AP4UtprjFee8DhzKi2db3waW8tr -T artifactsNupkg.nupkg -X PUT -H 'X-Explode-Archive: true' "https://student3642.jfrog.io/artifactory/gitact-nuget-local/${{ github.run_id }}/"

    - name: Publish Generic (zip)
      if: steps.fetch-artifacts.outputs.zipTypeArtifact-exists == 'true'
      run: | 
        curl -v --user raju4cloud:AP4UtprjFee8DhzKi2db3waW8tr -T artifactsZip.zip -X PUT -H 'X-Explode-Archive: true' "https://student3642.jfrog.io/artifactory/gitact-generic-local/${{ github.run_id }}/"

    
